<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

  mc:Ignorable="d"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               
  xmlns:watermark="clr-namespace:SimpleControls.WatermarkTextBox"
  xmlns:pinlvw="clr-namespace:SimpleControls.MRU.View"
  xmlns:hyperl="clr-namespace:SimpleControls.Hyperlink"
  >

  <!-- Define color of watermark in WatermarkTextBox name space -->
  <SolidColorBrush x:Key="brushWatermarkForeground" Color="#AA000033" />
  <SolidColorBrush x:Key="brushWatermarkBackground" Color="Transparent" />

  <Style TargetType="{x:Type watermark:TextBoxWithWatermark}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type watermark:TextBoxWithWatermark}">
          <ControlTemplate.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <watermark:WatermarkHelper x:Key="WatermarkHelper" />
          </ControlTemplate.Resources>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Content="{Binding Path=LabelTextBox, RelativeSource={RelativeSource FindAncestor, AncestorType=watermark:TextBoxWithWatermark, AncestorLevel=1}}"
                   HorizontalAlignment="Left" VerticalAlignment="Bottom"
                   Grid.Column="0" Grid.Row="0"/>

            <TextBox Name="txtUserEntry1"
                     Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType=watermark:TextBoxWithWatermark, AncestorLevel=1}}"
                     VerticalAlignment="Center" HorizontalAlignment="Stretch"
                     Grid.Column="0" Grid.Row="1" />
            <TextBlock Text="{Binding Path=Watermark, RelativeSource={RelativeSource FindAncestor, AncestorType=watermark:TextBoxWithWatermark, AncestorLevel=1}}"
                     Foreground="{StaticResource brushWatermarkForeground}"
                     Background="{StaticResource brushWatermarkBackground}"
                     IsHitTestVisible="False"
                     VerticalAlignment="Center" HorizontalAlignment="Stretch"
                     Grid.Column="0" Grid.Row="1" Margin="5,2">
            <TextBlock.Visibility>
              <Binding ElementName="txtUserEntry1" Path="Text.IsEmpty" Converter="{StaticResource BooleanToVisibilityConverter}" />
            </TextBlock.Visibility>
            </TextBlock>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
  <Style TargetType="{x:Type hyperl:FileHyperlink}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="ContextMenu">
      <Setter.Value>
        <ContextMenu>
          <MenuItem Header="Copy Url to Clipboard"
                    Command="{x:Static hyperl:FileHyperlink.CopyUri}"
                    CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

          <MenuItem Header="Open with Windows Application..."
                            Command="{x:Static hyperl:FileHyperlink.NavigateToUri}"
                            CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

          <MenuItem Header="Open containing folder"
                            Command="{x:Static hyperl:FileHyperlink.OpenContainingFolder}"
                            CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        </ContextMenu>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type hyperl:FileHyperlink}">
          <TextBlock  ToolTip="{Binding ElementName=PART_Hyperlink, Path=NavigateUri}">
            <TextBlock.InputBindings>
              <KeyBinding Key="C" Modifiers="Ctrl" Command="{x:Static hyperl:FileHyperlink.CopyUri}"
                                                   CommandParameter="{Binding ElementName=PART_Hyperlink,Path=NavigateUri}"/>
            </TextBlock.InputBindings>
            <Hyperlink Name="PART_Hyperlink"
                        NavigateUri="{Binding Path=NavigateUri, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:FileHyperlink, AncestorLevel=1}}"
                        >
              <!-- Moved link to event handler RequestNavigate="Hyperlink_RequestNavigate" to code behind -->
              <TextBlock Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:FileHyperlink, AncestorLevel=1}}" />
            </Hyperlink>
          </TextBlock>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
  <Style TargetType="{x:Type hyperl:WebHyperlink}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="ContextMenu">
      <Setter.Value>
        <ContextMenu>
          <MenuItem Header="Copy Url to Clipboard"
                    Command="{x:Static hyperl:WebHyperlink.CopyUri}"
                    CommandTarget="{Binding PlacementTarget,
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

          <MenuItem Header="Open Target in Browser"
                    Command="{x:Static hyperl:WebHyperlink.NavigateToUri}"
                    CommandTarget="{Binding PlacementTarget,
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        </ContextMenu>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type hyperl:WebHyperlink}">
          <TextBlock ToolTip="{Binding ElementName=PART_Hyperlink,Path=NavigateUri}">
            <TextBlock.InputBindings>
              <KeyBinding Key="C" Modifiers="Ctrl" Command="{x:Static hyperl:WebHyperlink.CopyUri}"
                                          CommandParameter="{Binding ElementName=PART_Hyperlink,Path=NavigateUri}"/>
            </TextBlock.InputBindings>

            <Hyperlink Name="PART_Hyperlink"
                        NavigateUri="{Binding Path=NavigateUri, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:WebHyperlink, AncestorLevel=1}}">
              <TextBlock Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:WebHyperlink, AncestorLevel=1}}" />
            </Hyperlink>
          </TextBlock>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        Checkbox style for pin visual
        Original source of animation (is replaced with own XAML image)
        http://stackoverflow.com/questions/7459642/how-do-i-create-a-wpf-checkbox-control-template-in-xaml-with-the-following-requi
      -->
  <Style TargetType="{x:Type pinlvw:PinnableCheckbox}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid>
            <!-- Needle Pin in unpinned mode XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
            <Image x:Name="NoCheckMarkImage" Source="/SimpleControls;component/MRU/Images/NoPin16.png" Opacity="0" Width="12" />

            <!-- Needle Pin in pined mode XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
            <Image x:Name="CheckMarkImage" Source="/SimpleControls;component/MRU/Images/Pinned16.png" Width="12" />
          </Grid>

          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <!-- Condition Property="IsMouseOver" Value="True"/ -->
                <Condition Property="IsChecked" Value="False"/>
              </MultiTrigger.Conditions>

              <MultiTrigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NoCheckMarkImage" To="0.3" Duration="0:0:0.1"/>
                  </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NoCheckMarkImage" To="0" Duration="0:0:0.1"/>
                  </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.ExitActions>
            </MultiTrigger>

            <Trigger Property="IsChecked" Value="True">
              <!-- Setter TargetName="CheckBorder" Property="Opacity" Value="1"/ -->
              <Setter TargetName="CheckMarkImage" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
              <!-- Setter TargetName="CheckBorder" Property="Opacity" Value="0"/ -->
              <Setter TargetName="CheckMarkImage" Property="Opacity" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type pinlvw:PinableListViewItem}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Padding" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/><!-- This is required for the PathTrimmingTextBlock -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Border Name="ListemBackgroundBorder"
                  Padding="3"
                  BorderBrush="Transparent"
                  BorderThickness="1"
                  CornerRadius="3"
                  SnapsToDevicePixels="true"
                  Background="Transparent">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type pinlvw:PinableListView}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type pinlvw:PinableListView}">
          <Border Padding="0"
                  BorderThickness="0"
                  BorderBrush="Transparent"
                  
                  Name="Bd"
                  SnapsToDevicePixels="True">
            <ScrollViewer Padding="0" Focusable="False">
              <ItemsPresenter SnapsToDevicePixels="True" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
